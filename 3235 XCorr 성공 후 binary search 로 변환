///본 작업은 Success(100) 후에 binary search 로 제대로 Standard 표본을 만들기 위해 연구중입니다. -- 2018/08/05
#include <bits/stdc++.h>
#define MAX 300000
using namespace std;

struct tuple_{
    int idx;
    int num;
};
tuple_ X[MAX+5];
tuple_ Y[MAX+5];
long long int a;
long long int b;
int n,m;
long long int S[MAX+5];

void input(){
    freopen("in.txt","r",stdin);
    scanf("%d",&n);
    int i;
    for(i=0;i<n;i++){
        scanf("%d %d",&X[i+1].idx,&X[i+1].num);
    }
    scanf("%d",&m);
    for(i=0;i<m;i++){
        scanf("%d %d",&Y[i+1].idx,&Y[i+1].num);
    }
    scanf("%lld %lld",&a,&b);
    for(i=0;i<m;i++){
        S[i+1]=S[i]+Y[i+1].num;
    }
}
int bs(int s, int e, int key){
   if(s>=e) return -1;
   if(Y[st+1])
}
int main(){
    input();
    long long int ans=0;
    int i;
    int st=0;
    int ed=0;
    for(i=0;i<n;i++){
        st=bs(0,m,X[i+1].idx+b+1);
        ed=bs(0,m,X[i+1].idx+a);
        /**
        while(1){
            if(st>=m || Y[st+1].idx>=X[i+1].idx+b+1) break;
            st++;
        }
        while(1){
            if(ed>=m || Y[ed+1].idx>=X[i+1].idx+a) break;
            ed++;
        }
        **/

        ans+=X[i+1].num*(S[st]-S[ed]);
    }
    printf("%lld",ans);
    return 0;
}
